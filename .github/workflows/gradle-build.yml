name: Gradle Build & Test

# Déclencheur du workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# Configuration des jobs
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuration de JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      # Cache Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Exécution des tests
      - name: Run tests with Gradle
        run: ./gradlew test

      # Construction du fichier JAR
      - name: Build the JAR
        run: ./gradlew build

      # Archive du build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HoppipotameDiscordBot
          path: build/libs/*.jar
  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    steps:
      # Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3
      # Configuration de JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
      # Construction du fichier JAR
      - name: Build the JAR
        run: ./gradlew build
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true